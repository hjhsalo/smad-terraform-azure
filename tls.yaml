apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: amb-ingress
  annotations:
    kubernetes.io/ingress.class: ambassador
spec:
  tls:
  - hosts:
    - smaddis.westeurope.cloudapp.azure.com
    secretName: ambassador-certs
  rules:
  - host: smaddis.westeurope.cloudapp.azure.com
    http:
      paths:
      - path: /grafana/
        pathType: Prefix
        backend:
          service:
            name: prometheus-grafana
            port:
              number: 80
      - path: /jaeger/
        pathType: Prefix
        backend:
          service:
            name: jaeger-operator-jaeger-query
            port:
              number: 16686
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-prod
spec:
  acme:
    email: email@example.com
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt-prod
    solvers:
    - http01:
        ingress:
          class: nginx
      selector: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: ambassador-certs
  # cert-manager will put the resulting Secret in the same Kubernetes 
  # namespace as the Certificate. You should create the certificate in 
  # whichever namespace you want to configure a Host.
  namespace: default
spec:
  secretName: ambassador-certs
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  dnsNames:
  - smaddis.westeurope.cloudapp.azure.com